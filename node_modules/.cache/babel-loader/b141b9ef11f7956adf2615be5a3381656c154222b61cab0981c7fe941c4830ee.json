{"ast":null,"code":"var _jsxFileName = \"D:\\\\secOpp\\\\Second-opinion\\\\src\\\\containers\\\\global\\\\breadcrumb\\\\index.jsx\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breadcrumb = _ref => {\n  let {\n    prevs,\n    contentThree,\n    title,\n    classOptionOne,\n    classOptionTwo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-title-area\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `page-title-content ${classOptionOne}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `bread-crumbs ${classOptionTwo}`,\n              children: [prevs.map(prev => /*#__PURE__*/_jsxDEV(Link, {\n                to: process.env.PUBLIC_URL + prev.path,\n                children: [prev.text, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"breadcrumb-sep\",\n                  children: \"/\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 41\n                }, this)]\n              }, prev.text, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"active\",\n                children: contentThree\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"title\",\n              dangerouslySetInnerHTML: {\n                __html: title\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Breadcrumb;\nBreadcrumb.propTypes = {\n  prevs: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired\n  })),\n  contentThree: PropTypes.string,\n  classOptionOne: PropTypes.string,\n  classOptionTwo: PropTypes.string,\n  title: PropTypes.string\n};\nBreadcrumb.defaultProps = {\n  classOptionOne: \"page-title-content\",\n  classOptionTwo: \"bread-crumbs\"\n};\nexport default Breadcrumb;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumb\");","map":{"version":3,"names":["PropTypes","Link","jsxDEV","_jsxDEV","Breadcrumb","_ref","prevs","contentThree","title","classOptionOne","classOptionTwo","className","children","map","prev","to","process","env","PUBLIC_URL","path","text","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","propTypes","arrayOf","shape","string","isRequired","defaultProps","$RefreshReg$"],"sources":["D:/secOpp/Second-opinion/src/containers/global/breadcrumb/index.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Breadcrumb = ({\n    prevs,\n    contentThree,\n    title,\n    classOptionOne,\n    classOptionTwo,\n}) => {\n    return (\n        <div className=\"page-title-area\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className={`page-title-content ${classOptionOne}`}>\n                            <div className={`bread-crumbs ${classOptionTwo}`}>\n                                {prevs.map((prev) => (\n                                    <Link\n                                        key={prev.text}\n                                        to={process.env.PUBLIC_URL + prev.path}\n                                    >\n                                        {prev.text}\n                                        <span className=\"breadcrumb-sep\">\n                                            /\n                                        </span>\n                                    </Link>\n                                ))}\n\n                                <span className=\"active\">{contentThree}</span>\n                            </div>\n                            <h4\n                                className=\"title\"\n                                dangerouslySetInnerHTML={{ __html: title }}\n                            ></h4>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nBreadcrumb.propTypes = {\n    prevs: PropTypes.arrayOf(\n        PropTypes.shape({\n            text: PropTypes.string.isRequired,\n            path: PropTypes.string.isRequired,\n        })\n    ),\n    contentThree: PropTypes.string,\n    classOptionOne: PropTypes.string,\n    classOptionTwo: PropTypes.string,\n    title: PropTypes.string,\n};\n\nBreadcrumb.defaultProps = {\n    classOptionOne: \"page-title-content\",\n    classOptionTwo: \"bread-crumbs\",\n};\n\nexport default Breadcrumb;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGC,IAAA,IAMb;EAAA,IANc;IAChBC,KAAK;IACLC,YAAY;IACZC,KAAK;IACLC,cAAc;IACdC;EACJ,CAAC,GAAAL,IAAA;EACG,oBACIF,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BT,OAAA;MAAKQ,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBT,OAAA;QAAKQ,SAAS,EAAC,KAAK;QAAAC,QAAA,eAChBT,OAAA;UAAKQ,SAAS,EAAC,WAAW;UAAAC,QAAA,eACtBT,OAAA;YAAKQ,SAAS,EAAG,sBAAqBF,cAAe,EAAE;YAAAG,QAAA,gBACnDT,OAAA;cAAKQ,SAAS,EAAG,gBAAeD,cAAe,EAAE;cAAAE,QAAA,GAC5CN,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACZX,OAAA,CAACF,IAAI;gBAEDc,EAAE,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGJ,IAAI,CAACK,IAAK;gBAAAP,QAAA,GAEtCE,IAAI,CAACM,IAAI,eACVjB,OAAA;kBAAMQ,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAAC;gBAEjC;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAO;cAAA,GANFV,IAAI,CAACM,IAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAQrB,CAAC,eAEFrB,OAAA;gBAAMQ,SAAS,EAAC,QAAQ;gBAAAC,QAAA,EAAEL;cAAY;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAQ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAC5C,eACNrB,OAAA;cACIQ,SAAS,EAAC,OAAO;cACjBc,uBAAuB,EAAE;gBAAEC,MAAM,EAAElB;cAAM;YAAE;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACJ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAACG,EAAA,GAtCIvB,UAAU;AAwChBA,UAAU,CAACwB,SAAS,GAAG;EACnBtB,KAAK,EAAEN,SAAS,CAAC6B,OAAO,CACpB7B,SAAS,CAAC8B,KAAK,CAAC;IACZV,IAAI,EAAEpB,SAAS,CAAC+B,MAAM,CAACC,UAAU;IACjCb,IAAI,EAAEnB,SAAS,CAAC+B,MAAM,CAACC;EAC3B,CAAC,CAAC,CACL;EACDzB,YAAY,EAAEP,SAAS,CAAC+B,MAAM;EAC9BtB,cAAc,EAAET,SAAS,CAAC+B,MAAM;EAChCrB,cAAc,EAAEV,SAAS,CAAC+B,MAAM;EAChCvB,KAAK,EAAER,SAAS,CAAC+B;AACrB,CAAC;AAED3B,UAAU,CAAC6B,YAAY,GAAG;EACtBxB,cAAc,EAAE,oBAAoB;EACpCC,cAAc,EAAE;AACpB,CAAC;AAED,eAAeN,UAAU;AAAC,IAAAuB,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}