{"ast":null,"code":"var _jsxFileName = \"/Users/corcusstudio/Desktop/SecOpp/Second-opinion/src/components/accordion/index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AccordionItem from \"./item\";\nimport AccordionTitle from \"./title\";\nimport AccordionTitleTwo from \"./titleTwo\";\nimport AccordionContent from \"./content\";\nimport { AccordionContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordion = _ref => {\n  _s();\n  let {\n    children,\n    classOption\n  } = _ref;\n  const [ids, setIds] = useState([]);\n  const [activeId, setActiveId] = useState(\"\");\n  const [isInit, setIsInit] = useState(true);\n  const toggleActive = id => {\n    if (id === activeId) {\n      setActiveId(\"\");\n    } else {\n      setActiveId(id);\n    }\n  };\n  const setIdsOnInit = id => {\n    setIds(ids => [...ids, id]);\n  };\n  const setActiveIdOnInit = () => {\n    if (!activeId) setActiveId(ids[0]);\n  };\n  useEffect(() => {\n    setActiveIdOnInit();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ids.length]);\n  return /*#__PURE__*/_jsxDEV(AccordionContext.Provider, {\n    value: {\n      ids,\n      setIds,\n      activeId,\n      setActiveId,\n      toggleActive,\n      setIdsOnInit,\n      isInit,\n      setIsInit\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `accordion ${classOption}`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Accordion, \"6YsWQJlg60B/NMq1vVeZW99llpc=\");\n_c = Accordion;\nAccordion.propTypes = {\n  children: PropTypes.node.isRequired,\n  classOption: PropTypes.string\n};\nAccordion.defaultProps = {\n  classOption: \"accordion\"\n};\nexport { AccordionItem, AccordionTitle, AccordionTitleTwo, AccordionContent };\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["useState","useEffect","PropTypes","AccordionItem","AccordionTitle","AccordionTitleTwo","AccordionContent","AccordionContext","jsxDEV","_jsxDEV","Accordion","_ref","_s","children","classOption","ids","setIds","activeId","setActiveId","isInit","setIsInit","toggleActive","id","setIdsOnInit","setActiveIdOnInit","length","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","string","defaultProps","$RefreshReg$"],"sources":["/Users/corcusstudio/Desktop/SecOpp/Second-opinion/src/components/accordion/index.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AccordionItem from \"./item\";\nimport AccordionTitle from \"./title\";\nimport AccordionTitleTwo from \"./titleTwo\";\nimport AccordionContent from \"./content\";\nimport { AccordionContext } from \"./context\";\n\nconst Accordion = ({ children, classOption }) => {\n    const [ids, setIds] = useState([]);\n    const [activeId, setActiveId] = useState(\"\");\n    const [isInit, setIsInit] = useState(true);\n\n    const toggleActive = (id) => {\n        if (id === activeId) {\n            setActiveId(\"\");\n        } else {\n            setActiveId(id);\n        }\n    };\n\n    const setIdsOnInit = (id) => {\n        setIds((ids) => [...ids, id]);\n    };\n\n    const setActiveIdOnInit = () => {\n        if (!activeId) setActiveId(ids[0]);\n    };\n\n    useEffect(() => {\n        setActiveIdOnInit();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ids.length]);\n\n    return (\n        <AccordionContext.Provider\n            value={{\n                ids,\n                setIds,\n                activeId,\n                setActiveId,\n                toggleActive,\n                setIdsOnInit,\n                isInit,\n                setIsInit,\n            }}\n        >\n            <div className={`accordion ${classOption}`}>{children}</div>\n        </AccordionContext.Provider>\n    );\n};\n\nAccordion.propTypes = {\n    children: PropTypes.node.isRequired,\n    classOption: PropTypes.string,\n};\nAccordion.defaultProps = {\n    classOption: \"accordion\",\n};\n\nexport { AccordionItem, AccordionTitle, AccordionTitleTwo, AccordionContent };\n\nexport default Accordion;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,aAAa,MAAM,QAAQ;AAClC,OAAOC,cAAc,MAAM,SAAS;AACpC,OAAOC,iBAAiB,MAAM,YAAY;AAC1C,OAAOC,gBAAgB,MAAM,WAAW;AACxC,SAASC,gBAAgB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGC,IAAA,IAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACxC,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMqB,YAAY,GAAIC,EAAE,IAAK;IACzB,IAAIA,EAAE,KAAKL,QAAQ,EAAE;MACjBC,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MACHA,WAAW,CAACI,EAAE,CAAC;IACnB;EACJ,CAAC;EAED,MAAMC,YAAY,GAAID,EAAE,IAAK;IACzBN,MAAM,CAAED,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEO,EAAE,CAAC,CAAC;EACjC,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACP,QAAQ,EAAEC,WAAW,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZuB,iBAAiB,EAAE;IACnB;EACJ,CAAC,EAAE,CAACT,GAAG,CAACU,MAAM,CAAC,CAAC;EAEhB,oBACIhB,OAAA,CAACF,gBAAgB,CAACmB,QAAQ;IACtBC,KAAK,EAAE;MACHZ,GAAG;MACHC,MAAM;MACNC,QAAQ;MACRC,WAAW;MACXG,YAAY;MACZE,YAAY;MACZJ,MAAM;MACNC;IACJ,CAAE;IAAAP,QAAA,eAEFJ,OAAA;MAAKmB,SAAS,EAAG,aAAYd,WAAY,EAAE;MAAAD,QAAA,EAAEA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEpC,CAAC;AAACpB,EAAA,CA1CIF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA4CfA,SAAS,CAACwB,SAAS,GAAG;EAClBrB,QAAQ,EAAEX,SAAS,CAACiC,IAAI,CAACC,UAAU;EACnCtB,WAAW,EAAEZ,SAAS,CAACmC;AAC3B,CAAC;AACD3B,SAAS,CAAC4B,YAAY,GAAG;EACrBxB,WAAW,EAAE;AACjB,CAAC;AAED,SAASX,aAAa,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,gBAAgB;AAE3E,eAAeI,SAAS;AAAC,IAAAuB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}